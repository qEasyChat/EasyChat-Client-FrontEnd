steps:
  - env:
      # Credentials used to perform the release and commit the updated assets
      # to the repository.
      # Required: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    name: Release
    uses: ridedott/release-me-action@master
    with:
      # Configure Semantic Release branches parameter:
      # https://semantic-release.gitbook.io/semantic-release/usage/workflow-configuration#branches-properties
      #
      # If not specified, Semantic Release will use its default branches
      # configuration, specified in the API documentation:
      # https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#branches
      release-branches: '["+([0-9])?(.{+([0-9]),x}).x","master","next","next-major",{"name":"beta","prerelease":"beta"},{"name":"alpha","prerelease":"alpha"}]',
      # Commit the new line separated glob patterns to the repository as part
      # of the release process.
      commit-assets: |
        ./test.txt
      # Run semantic release in dry-run mode.
      # Default: false
      dry-run: true
      # Bump the node module version and commit the changed package files to the
      # repository as part of the release process.
      # Default: false
      node-module: true
      # Attach the new line separated listed glob patterns to the release.
      release-assets: |
        ./test.txt
      # Do not generate CHANGELOG.md file
      # Default: false
      disable-changelog: true
      # Configure the semantic release commit analyzer rules that are used to
      # determine the correct release version.
      # https://www.npmjs.com/package/@semantic-release/commit-analyzer#releaserules
      release-rules:
        '[{ "release": "patch", "type": "build" }, { "release": "patch", "type":
        "chore(deps)" }, { "release": "patch", "type": "chore(deps-dev)" }]'
      # Append additional semantic release commit analyzer rules to the default set of rules already included in the action.
      # Default rules:
      # [
      #  { "release": "patch", "type": "build" },
      #  { "release": "patch", "type": "chore" },
      #  { "release": "patch", "type": "ci" },
      #  { "release": "patch", "type": "docs" },
      #  { "release": "patch", "type": "improvement" },
      #  { "release": "patch", "type": "refactor" },
      #  { "release": false, "subject": "*\\[skip release\\]*" },
      # ]
      # Note: cannot be used in conjunction with 'release-rules' as these do not override the default rules.
      release-rules-append:
        '[{"release":false,"subject":"*\\[skip release\\]*"}]'
      # Loads a custom Semantic Release configuration from this file. See
      # https://semantic-release.gitbook.io/semantic-release/usage/configuration#configuration-file.
      # Provided configuration will be shallow merged with defaults. Supported
      # formats are YALM or CommonJS.
      config-file: ./path/to/config.yaml
      # Specify additional semantic-release plugins to install. Accepts packages
      # in typical package.json format.
      additional-plugins:
        '{ "@google/semantic-release-replace-plugin": "^4.0.2" }'
